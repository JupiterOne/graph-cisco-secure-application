import {
  createIntegrationEntity,
  Entity,
} from '@jupiterone/integration-sdk-core';

import { PanopticaVulnerability } from '../../types';
import { Entities } from '../constants';

export function getVulnerabilityKey(id: string): string {
  return `panoptica_vulnerability:${id}`;
}

export function createVulnerabilityEntity(
  vulnerability: PanopticaVulnerability,
): Entity {
  return createIntegrationEntity({
    entityData: {
      source: vulnerability,
      assign: {
        _key: getVulnerabilityKey(vulnerability.id),
        _type: Entities.VULNERABILITY._type,
        _class: Entities.VULNERABILITY._class,
        id: vulnerability.id,
        name: vulnerability.name,
        // DISCUSSION REQUIRED
        // Required fields (category, blocking, open, production, public):
        // ============================
        category: 'other',
        blocking: false,
        open: false,
        production: false,
        public: false,
        // ============================
        description: vulnerability.description || undefined,
        severity: vulnerability.severity,
        cvssScore: vulnerability.cvss.score,
        cvssAttackVector: vulnerability.cvss.attackVector,
        cvssAttackComplexity: vulnerability.cvss.attackComplexity,
        cvssPrivilegesRequired: vulnerability.cvss.privilegesRequired,
        cvssUserInteraction: vulnerability.cvss.userInteraction,
        cvssScope: vulnerability.cvss.scope,
        cvssConfidentialityImpact: vulnerability.cvss.confidentialityImpact,
        cvssIntegrityImpact: vulnerability.cvss.integrityImpact,
        cvssAvailabilityImpact: vulnerability.cvss.availabilityImpact,
        vulnerabilitySourcesFixAvailability:
          vulnerability.vulnerabilitySources.fixAvailability,
        layerName: vulnerability.layerName,
        webLink: vulnerability.link,
      },
    },
  });
}
